/**
 * generated by Xtext 2.32.0
 */
package org.example.restdsl.restDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.example.restdsl.restDsl.Logic;
import org.example.restdsl.restDsl.Operation;
import org.example.restdsl.restDsl.RestDslPackage;
import org.example.restdsl.restDsl.Type;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Operation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.example.restdsl.restDsl.impl.OperationImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.example.restdsl.restDsl.impl.OperationImpl#getMethod <em>Method</em>}</li>
 *   <li>{@link org.example.restdsl.restDsl.impl.OperationImpl#getPath <em>Path</em>}</li>
 *   <li>{@link org.example.restdsl.restDsl.impl.OperationImpl#getRequest <em>Request</em>}</li>
 *   <li>{@link org.example.restdsl.restDsl.impl.OperationImpl#getResponse <em>Response</em>}</li>
 *   <li>{@link org.example.restdsl.restDsl.impl.OperationImpl#getLogic <em>Logic</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OperationImpl extends MinimalEObjectImpl.Container implements Operation
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getMethod() <em>Method</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethod()
   * @generated
   * @ordered
   */
  protected static final String METHOD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMethod() <em>Method</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethod()
   * @generated
   * @ordered
   */
  protected String method = METHOD_EDEFAULT;

  /**
   * The default value of the '{@link #getPath() <em>Path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPath()
   * @generated
   * @ordered
   */
  protected static final String PATH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPath() <em>Path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPath()
   * @generated
   * @ordered
   */
  protected String path = PATH_EDEFAULT;

  /**
   * The cached value of the '{@link #getRequest() <em>Request</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequest()
   * @generated
   * @ordered
   */
  protected Type request;

  /**
   * The cached value of the '{@link #getResponse() <em>Response</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResponse()
   * @generated
   * @ordered
   */
  protected Type response;

  /**
   * The cached value of the '{@link #getLogic() <em>Logic</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLogic()
   * @generated
   * @ordered
   */
  protected Logic logic;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OperationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RestDslPackage.Literals.OPERATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestDslPackage.OPERATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMethod()
  {
    return method;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMethod(String newMethod)
  {
    String oldMethod = method;
    method = newMethod;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestDslPackage.OPERATION__METHOD, oldMethod, method));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPath()
  {
    return path;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPath(String newPath)
  {
    String oldPath = path;
    path = newPath;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestDslPackage.OPERATION__PATH, oldPath, path));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type getRequest()
  {
    return request;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRequest(Type newRequest, NotificationChain msgs)
  {
    Type oldRequest = request;
    request = newRequest;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RestDslPackage.OPERATION__REQUEST, oldRequest, newRequest);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRequest(Type newRequest)
  {
    if (newRequest != request)
    {
      NotificationChain msgs = null;
      if (request != null)
        msgs = ((InternalEObject)request).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RestDslPackage.OPERATION__REQUEST, null, msgs);
      if (newRequest != null)
        msgs = ((InternalEObject)newRequest).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RestDslPackage.OPERATION__REQUEST, null, msgs);
      msgs = basicSetRequest(newRequest, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestDslPackage.OPERATION__REQUEST, newRequest, newRequest));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type getResponse()
  {
    return response;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetResponse(Type newResponse, NotificationChain msgs)
  {
    Type oldResponse = response;
    response = newResponse;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RestDslPackage.OPERATION__RESPONSE, oldResponse, newResponse);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setResponse(Type newResponse)
  {
    if (newResponse != response)
    {
      NotificationChain msgs = null;
      if (response != null)
        msgs = ((InternalEObject)response).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RestDslPackage.OPERATION__RESPONSE, null, msgs);
      if (newResponse != null)
        msgs = ((InternalEObject)newResponse).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RestDslPackage.OPERATION__RESPONSE, null, msgs);
      msgs = basicSetResponse(newResponse, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestDslPackage.OPERATION__RESPONSE, newResponse, newResponse));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Logic getLogic()
  {
    return logic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLogic(Logic newLogic, NotificationChain msgs)
  {
    Logic oldLogic = logic;
    logic = newLogic;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RestDslPackage.OPERATION__LOGIC, oldLogic, newLogic);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLogic(Logic newLogic)
  {
    if (newLogic != logic)
    {
      NotificationChain msgs = null;
      if (logic != null)
        msgs = ((InternalEObject)logic).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RestDslPackage.OPERATION__LOGIC, null, msgs);
      if (newLogic != null)
        msgs = ((InternalEObject)newLogic).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RestDslPackage.OPERATION__LOGIC, null, msgs);
      msgs = basicSetLogic(newLogic, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestDslPackage.OPERATION__LOGIC, newLogic, newLogic));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RestDslPackage.OPERATION__REQUEST:
        return basicSetRequest(null, msgs);
      case RestDslPackage.OPERATION__RESPONSE:
        return basicSetResponse(null, msgs);
      case RestDslPackage.OPERATION__LOGIC:
        return basicSetLogic(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RestDslPackage.OPERATION__NAME:
        return getName();
      case RestDslPackage.OPERATION__METHOD:
        return getMethod();
      case RestDslPackage.OPERATION__PATH:
        return getPath();
      case RestDslPackage.OPERATION__REQUEST:
        return getRequest();
      case RestDslPackage.OPERATION__RESPONSE:
        return getResponse();
      case RestDslPackage.OPERATION__LOGIC:
        return getLogic();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RestDslPackage.OPERATION__NAME:
        setName((String)newValue);
        return;
      case RestDslPackage.OPERATION__METHOD:
        setMethod((String)newValue);
        return;
      case RestDslPackage.OPERATION__PATH:
        setPath((String)newValue);
        return;
      case RestDslPackage.OPERATION__REQUEST:
        setRequest((Type)newValue);
        return;
      case RestDslPackage.OPERATION__RESPONSE:
        setResponse((Type)newValue);
        return;
      case RestDslPackage.OPERATION__LOGIC:
        setLogic((Logic)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RestDslPackage.OPERATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case RestDslPackage.OPERATION__METHOD:
        setMethod(METHOD_EDEFAULT);
        return;
      case RestDslPackage.OPERATION__PATH:
        setPath(PATH_EDEFAULT);
        return;
      case RestDslPackage.OPERATION__REQUEST:
        setRequest((Type)null);
        return;
      case RestDslPackage.OPERATION__RESPONSE:
        setResponse((Type)null);
        return;
      case RestDslPackage.OPERATION__LOGIC:
        setLogic((Logic)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RestDslPackage.OPERATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case RestDslPackage.OPERATION__METHOD:
        return METHOD_EDEFAULT == null ? method != null : !METHOD_EDEFAULT.equals(method);
      case RestDslPackage.OPERATION__PATH:
        return PATH_EDEFAULT == null ? path != null : !PATH_EDEFAULT.equals(path);
      case RestDslPackage.OPERATION__REQUEST:
        return request != null;
      case RestDslPackage.OPERATION__RESPONSE:
        return response != null;
      case RestDslPackage.OPERATION__LOGIC:
        return logic != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", method: ");
    result.append(method);
    result.append(", path: ");
    result.append(path);
    result.append(')');
    return result.toString();
  }

} //OperationImpl
