/*
 * generated by Xtext 2.32.0
 */
package org.example.restdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RestDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RestDslElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.restdsl.RestDsl.RestDsl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cEntitiesAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cEntitiesEntityParserRuleCall_0_0 = (RuleCall)cEntitiesAssignment_0.eContents().get(0);
		private final Assignment cRestApisAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cRestApisRestApiParserRuleCall_1_0 = (RuleCall)cRestApisAssignment_1.eContents().get(0);
		
		//RestDsl:
		//    (entities+=Entity | restApis+=RestApi)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(entities+=Entity | restApis+=RestApi)*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//entities+=Entity
		public Assignment getEntitiesAssignment_0() { return cEntitiesAssignment_0; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_0_0() { return cEntitiesEntityParserRuleCall_0_0; }
		
		//restApis+=RestApi
		public Assignment getRestApisAssignment_1() { return cRestApisAssignment_1; }
		
		//RestApi
		public RuleCall getRestApisRestApiParserRuleCall_1_0() { return cRestApisRestApiParserRuleCall_1_0; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.restdsl.RestDsl.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFieldsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFieldsFieldParserRuleCall_3_0 = (RuleCall)cFieldsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Entity:
		//    'entity' name=ID '{'
		//        fields+=Field*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'entity' name=ID '{'
		//    fields+=Field*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'entity'
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//fields+=Field*
		public Assignment getFieldsAssignment_3() { return cFieldsAssignment_3; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_3_0() { return cFieldsFieldParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.restdsl.RestDsl.Field");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeIDTerminalRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		
		//Field:
		//    name=ID ':' type=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' type=ID
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=ID
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//ID
		public RuleCall getTypeIDTerminalRuleCall_2_0() { return cTypeIDTerminalRuleCall_2_0; }
	}
	public class RestApiElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.restdsl.RestDsl.RestApi");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRestApiKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPathKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPathAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPathSTRINGTerminalRuleCall_4_0 = (RuleCall)cPathAssignment_4.eContents().get(0);
		private final Assignment cOperationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOperationsOperationParserRuleCall_5_0 = (RuleCall)cOperationsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RestApi:
		//    'restApi' name=ID '{'
		//        'path'  path=STRING
		//        (operations+=Operation)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'restApi' name=ID '{'
		//    'path'  path=STRING
		//    (operations+=Operation)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'restApi'
		public Keyword getRestApiKeyword_0() { return cRestApiKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'path'
		public Keyword getPathKeyword_3() { return cPathKeyword_3; }
		
		//path=STRING
		public Assignment getPathAssignment_4() { return cPathAssignment_4; }
		
		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_4_0() { return cPathSTRINGTerminalRuleCall_4_0; }
		
		//(operations+=Operation)*
		public Assignment getOperationsAssignment_5() { return cOperationsAssignment_5; }
		
		//Operation
		public RuleCall getOperationsOperationParserRuleCall_5_0() { return cOperationsOperationParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.restdsl.RestDsl.Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cCreateKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cReadKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cUpdateKeyword_0_2 = (Keyword)cAlternatives_0.eContents().get(2);
		private final Keyword cDeleteKeyword_0_3 = (Keyword)cAlternatives_0.eContents().get(3);
		private final Keyword cCustomEndpointKeyword_0_4 = (Keyword)cAlternatives_0.eContents().get(4);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMethodAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cMethodAlternatives_3_0 = (Alternatives)cMethodAssignment_3.eContents().get(0);
		private final Keyword cMethodGETKeyword_3_0_0 = (Keyword)cMethodAlternatives_3_0.eContents().get(0);
		private final Keyword cMethodPOSTKeyword_3_0_1 = (Keyword)cMethodAlternatives_3_0.eContents().get(1);
		private final Keyword cMethodPUTKeyword_3_0_2 = (Keyword)cMethodAlternatives_3_0.eContents().get(2);
		private final Keyword cMethodDELETEKeyword_3_0_3 = (Keyword)cMethodAlternatives_3_0.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPathKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPathAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPathSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cPathAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRequestKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRequestAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cRequestTypeParserRuleCall_5_1_0 = (RuleCall)cRequestAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cResponseKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cResponseAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cResponseTypeParserRuleCall_6_1_0 = (RuleCall)cResponseAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLogicKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cLogicAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cLogicLogicParserRuleCall_7_1_0 = (RuleCall)cLogicAssignment_7_1.eContents().get(0);
		
		//Operation:
		//    ('create' | 'read' | 'update' | 'delete' | 'customEndpoint') name=ID ':'
		//        (method=('GET' | 'POST' | 'PUT' | 'DELETE'))?
		//        ('path' path=STRING)?
		//        ('request' request=Type)? ('response' response=Type)?
		//        ('logic' logic=Logic)?;
		@Override public ParserRule getRule() { return rule; }
		
		//('create' | 'read' | 'update' | 'delete' | 'customEndpoint') name=ID ':'
		//    (method=('GET' | 'POST' | 'PUT' | 'DELETE'))?
		//    ('path' path=STRING)?
		//    ('request' request=Type)? ('response' response=Type)?
		//    ('logic' logic=Logic)?
		public Group getGroup() { return cGroup; }
		
		//('create' | 'read' | 'update' | 'delete' | 'customEndpoint')
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'create'
		public Keyword getCreateKeyword_0_0() { return cCreateKeyword_0_0; }
		
		//'read'
		public Keyword getReadKeyword_0_1() { return cReadKeyword_0_1; }
		
		//'update'
		public Keyword getUpdateKeyword_0_2() { return cUpdateKeyword_0_2; }
		
		//'delete'
		public Keyword getDeleteKeyword_0_3() { return cDeleteKeyword_0_3; }
		
		//'customEndpoint'
		public Keyword getCustomEndpointKeyword_0_4() { return cCustomEndpointKeyword_0_4; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(method=('GET' | 'POST' | 'PUT' | 'DELETE'))?
		public Assignment getMethodAssignment_3() { return cMethodAssignment_3; }
		
		//('GET' | 'POST' | 'PUT' | 'DELETE')
		public Alternatives getMethodAlternatives_3_0() { return cMethodAlternatives_3_0; }
		
		//'GET'
		public Keyword getMethodGETKeyword_3_0_0() { return cMethodGETKeyword_3_0_0; }
		
		//'POST'
		public Keyword getMethodPOSTKeyword_3_0_1() { return cMethodPOSTKeyword_3_0_1; }
		
		//'PUT'
		public Keyword getMethodPUTKeyword_3_0_2() { return cMethodPUTKeyword_3_0_2; }
		
		//'DELETE'
		public Keyword getMethodDELETEKeyword_3_0_3() { return cMethodDELETEKeyword_3_0_3; }
		
		//('path' path=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'path'
		public Keyword getPathKeyword_4_0() { return cPathKeyword_4_0; }
		
		//path=STRING
		public Assignment getPathAssignment_4_1() { return cPathAssignment_4_1; }
		
		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_4_1_0() { return cPathSTRINGTerminalRuleCall_4_1_0; }
		
		//('request' request=Type)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'request'
		public Keyword getRequestKeyword_5_0() { return cRequestKeyword_5_0; }
		
		//request=Type
		public Assignment getRequestAssignment_5_1() { return cRequestAssignment_5_1; }
		
		//Type
		public RuleCall getRequestTypeParserRuleCall_5_1_0() { return cRequestTypeParserRuleCall_5_1_0; }
		
		//('response' response=Type)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'response'
		public Keyword getResponseKeyword_6_0() { return cResponseKeyword_6_0; }
		
		//response=Type
		public Assignment getResponseAssignment_6_1() { return cResponseAssignment_6_1; }
		
		//Type
		public RuleCall getResponseTypeParserRuleCall_6_1_0() { return cResponseTypeParserRuleCall_6_1_0; }
		
		//('logic' logic=Logic)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'logic'
		public Keyword getLogicKeyword_7_0() { return cLogicKeyword_7_0; }
		
		//logic=Logic
		public Assignment getLogicAssignment_7_1() { return cLogicAssignment_7_1; }
		
		//Logic
		public RuleCall getLogicLogicParserRuleCall_7_1_0() { return cLogicLogicParserRuleCall_7_1_0; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.restdsl.RestDsl.Type");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTypeIDTerminalRuleCall_0 = (RuleCall)cTypeAssignment.eContents().get(0);
		
		//Type:
		//    type=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//type=ID
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//ID
		public RuleCall getTypeIDTerminalRuleCall_0() { return cTypeIDTerminalRuleCall_0; }
	}
	public class LogicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.example.restdsl.RestDsl.Logic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImplementationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImplementationSTRINGTerminalRuleCall_1_0 = (RuleCall)cImplementationAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Logic:
		//    '{' implementation=STRING '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' implementation=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//implementation=STRING
		public Assignment getImplementationAssignment_1() { return cImplementationAssignment_1; }
		
		//STRING
		public RuleCall getImplementationSTRINGTerminalRuleCall_1_0() { return cImplementationSTRINGTerminalRuleCall_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	
	
	private final RestDslElements pRestDsl;
	private final EntityElements pEntity;
	private final FieldElements pField;
	private final RestApiElements pRestApi;
	private final OperationElements pOperation;
	private final TypeElements pType;
	private final LogicElements pLogic;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RestDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRestDsl = new RestDslElements();
		this.pEntity = new EntityElements();
		this.pField = new FieldElements();
		this.pRestApi = new RestApiElements();
		this.pOperation = new OperationElements();
		this.pType = new TypeElements();
		this.pLogic = new LogicElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.example.restdsl.RestDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RestDsl:
	//    (entities+=Entity | restApis+=RestApi)*;
	public RestDslElements getRestDslAccess() {
		return pRestDsl;
	}
	
	public ParserRule getRestDslRule() {
		return getRestDslAccess().getRule();
	}
	
	//Entity:
	//    'entity' name=ID '{'
	//        fields+=Field*
	//    '}';
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Field:
	//    name=ID ':' type=ID;
	public FieldElements getFieldAccess() {
		return pField;
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}
	
	//RestApi:
	//    'restApi' name=ID '{'
	//        'path'  path=STRING
	//        (operations+=Operation)*
	//    '}';
	public RestApiElements getRestApiAccess() {
		return pRestApi;
	}
	
	public ParserRule getRestApiRule() {
		return getRestApiAccess().getRule();
	}
	
	//Operation:
	//    ('create' | 'read' | 'update' | 'delete' | 'customEndpoint') name=ID ':'
	//        (method=('GET' | 'POST' | 'PUT' | 'DELETE'))?
	//        ('path' path=STRING)?
	//        ('request' request=Type)? ('response' response=Type)?
	//        ('logic' logic=Logic)?;
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//Type:
	//    type=ID;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//Logic:
	//    '{' implementation=STRING '}';
	public LogicElements getLogicAccess() {
		return pLogic;
	}
	
	public ParserRule getLogicRule() {
		return getLogicAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
