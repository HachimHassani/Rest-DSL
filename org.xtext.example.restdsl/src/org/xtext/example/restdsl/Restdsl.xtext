grammar org.example.restdsl.RestDsl with org.eclipse.xtext.common.Terminals

generate restDsl "http://www.example.org/restdsl/RestDsl"

RestApi:
	(config=Configuration)
    (entities+=Entity | routers+=Router)*;

Configuration:
	'configuration' '{'
		'name' ':' name=ID
		'package' ':' package=ID
	'}';

Entity:
    'entity' name=ID '{'
        fields+=Field*
    '}';

Field:
    name=ID ':' type=ID;

Router:
    'router' name=ID '{'
        'path'  path=STRING
        (endpoints+=Endpoint)*
    '}';

Endpoint:
    	'endpoint' name=ID ':'
        method=('GET' | 'POST' | 'PUT' | 'DELETE')
        'path' path=STRING
        // required params specification
        (requestParams=RequestParams)?
        // request body
        (requestBody=RequestBody)?
        
        // endpoint type
        (
        	type='query' queryLogic=QueryEndpoint|
        	type='func' funcLogic=FuncEndpoint
        )
		;
        
// Request Body
RequestBody:
	'body' type=ID 'as' name=ID
;
        
// Request Params list
RequestParams:
	'params' '{'
    	firstParam=RequestParam // first field
    	(',' otherParams+=RequestParam)* // other fielsds
    '}'
;     

// one RequestParam, like field but with only types possible int string and float
RequestParam:
	name=ID ':' type=ID
;
        
// Query 
QueryEndpoint:
	queryType=ID 
	// query normal string or formated
	// query method
	(
		method='create' '(' entity=ID ')'|
		method='read' |
		method='readId' '(' entityId=INT ')' |
		method='update' '(' entityId=INT ',' entity=ID ')' |
		method='delete' '(' entityId=INT ')' |
		method='jpql' query=FormatedString
	)
;
	



// custom java function to handle endpoint
FuncEndpoint:
	('->' responseType=ID) // response type
	'{'
		javaCode=STRING
	'}'
;

// formated string specification
FormatedString:
	'('
	stringToFormat=STRING
	(',' values+=ID)*
	')'
;
    